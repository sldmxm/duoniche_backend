"""extend_user_bot_profiles_table

Revision ID: b9e3695ff304
Revises: 01bac1711dad
Create Date: 2025-05-06 21:41:17.837276

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from app.core.entities.user_bot_profile import BotID
from app.core.enums import LanguageLevel

# revision identifiers, used by Alembic.
revision: str = 'b9e3695ff304'
down_revision: Union[str, None] = '01bac1711dad'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    language_level_enum = sa.Enum('A1', 'A2', 'B1', 'B2', 'C1', 'C2', name='language_level_enum')
    language_level_enum.create(op.get_bind(), checkfirst=True)

    op.add_column('user_bot_profiles', sa.Column('user_language', sa.String(), nullable=False,
                                                 server_default='bg'))
    op.add_column('user_bot_profiles', sa.Column('language_level',
                                                 language_level_enum,  # Use the created enum object
                                                 nullable=False,
                                                 server_default='A2'))
    op.add_column('user_bot_profiles',
                  sa.Column('exercises_get_in_session', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('user_bot_profiles',
                  sa.Column('exercises_get_in_set', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('user_bot_profiles',
                  sa.Column('errors_count_in_set', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('user_bot_profiles', sa.Column('last_exercise_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('user_bot_profiles', sa.Column('session_started_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('user_bot_profiles', sa.Column('session_frozen_until', sa.DateTime(timezone=True), nullable=True))
    # ### end Alembic commands ###
    ### Data migration
    users_table = sa.table(
        'users',
        sa.column('user_id', sa.Integer),
        sa.column('user_language', sa.String),
        sa.column('target_language', sa.String),
        sa.column('language_level', sa.String),
        sa.column('exercises_get_in_session', sa.Integer),
        sa.column('exercises_get_in_set', sa.Integer),
        sa.column('errors_count_in_set', sa.Integer),
        sa.column('last_exercise_at', sa.DateTime(timezone=True)),
        sa.column('session_started_at', sa.DateTime(timezone=True)),
        sa.column('session_frozen_until', sa.DateTime(timezone=True)),
    )

    user_bot_profiles_table = sa.table(
        'user_bot_profiles',
        sa.column('user_id', sa.Integer),
        sa.column('bot_id', sa.Enum(BotID, name='bot_id_enum', create_type=False)),
        sa.column('user_language', sa.String),
        sa.column('language_level', sa.Enum(LanguageLevel, name='language_level_enum', create_type=False)),
        sa.column('exercises_get_in_session', sa.Integer),
        sa.column('exercises_get_in_set', sa.Integer),
        sa.column('errors_count_in_set', sa.Integer),
        sa.column('last_exercise_at', sa.DateTime(timezone=True)),
        sa.column('session_started_at', sa.DateTime(timezone=True)),
        sa.column('session_frozen_until', sa.DateTime(timezone=True)),
    )

    default_user_language_from_users = 'bg'
    default_language_level_str_from_users = 'A2'
    default_exercises_val = 0

    language_level_value_to_cast = sa.func.coalesce(
        users_table.c.language_level,
        default_language_level_str_from_users
    )

    stmt = (
        sa.update(user_bot_profiles_table)
        .where(user_bot_profiles_table.c.user_id == users_table.c.user_id)
        .where(user_bot_profiles_table.c.bot_id == sa.cast(sa.literal(BotID.BG.name), sa.Enum(BotID, name='bot_id_enum',
                                                                                              create_type=False)))
        .values(
            user_language=sa.func.coalesce(users_table.c.user_language, default_user_language_from_users),
            language_level=sa.cast(language_level_value_to_cast,
                                   language_level_enum),
            exercises_get_in_session=sa.func.coalesce(users_table.c.exercises_get_in_session, default_exercises_val),
            exercises_get_in_set=sa.func.coalesce(users_table.c.exercises_get_in_set, default_exercises_val),
            errors_count_in_set=sa.func.coalesce(users_table.c.errors_count_in_set, default_exercises_val),
            last_exercise_at=users_table.c.last_exercise_at,
            session_started_at=users_table.c.session_started_at,
            session_frozen_until=users_table.c.session_frozen_until,
        )
    )
    op.execute(stmt)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user_bot_profiles', 'session_frozen_until')
    op.drop_column('user_bot_profiles', 'session_started_at')
    op.drop_column('user_bot_profiles', 'last_exercise_at')
    op.drop_column('user_bot_profiles', 'errors_count_in_set')
    op.drop_column('user_bot_profiles', 'exercises_get_in_set')
    op.drop_column('user_bot_profiles', 'exercises_get_in_session')
    op.drop_column('user_bot_profiles', 'language_level')
    op.drop_column('user_bot_profiles', 'user_language')
    op.execute("DROP TYPE language_level_enum;")
    # ### end Alembic commands ###
