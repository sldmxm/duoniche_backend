"""initial migration

Revision ID: 81ce30bb3bd4
Revises:
Create Date: 2025-03-12 19:34:34.468404

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '81ce30bb3bd4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        'ix_exercise_attempts_attempt_id', table_name='exercise_attempts'
    )
    op.drop_table('exercise_attempts')
    op.drop_index('ix_cached_answers_answer_id', table_name='cached_answers')
    op.drop_table('cached_answers')
    op.drop_index('ix_exercises_exercise_id', table_name='exercises')
    op.drop_table('exercises')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'exercises',
        sa.Column(
            'exercise_id',
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('exercises_exercise_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            'exercise_type', sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column(
            'language_level', sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column('topic', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            'exercise_text', sa.TEXT(), autoincrement=False, nullable=False
        ),
        sa.Column(
            'data',
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint('exercise_id', name='exercises_pkey'),
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        'ix_exercises_exercise_id', 'exercises', ['exercise_id'], unique=False
    )
    op.create_table(
        'cached_answers',
        sa.Column(
            'answer_id',
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('cached_answers_answer_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            'exercise_id', sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            'answer',
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            'answer_text', sa.TEXT(), autoincrement=False, nullable=False
        ),
        sa.Column(
            'is_correct', sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column(
            'feedback', sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column(
            'created_at',
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            'created_by', sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ['exercise_id'],
            ['exercises.exercise_id'],
            name='cached_answers_exercise_id_fkey',
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('answer_id', name='cached_answers_pkey'),
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        'ix_cached_answers_answer_id',
        'cached_answers',
        ['answer_id'],
        unique=False,
    )
    op.create_table(
        'exercise_attempts',
        sa.Column(
            'attempt_id', sa.INTEGER(), autoincrement=True, nullable=False
        ),
        sa.Column(
            'user_id', sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            'exercise_id', sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            'answer',
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            'is_correct', sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column(
            'feedback', sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column(
            'cached_answer_id',
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ['cached_answer_id'],
            ['cached_answers.answer_id'],
            name='exercise_attempts_cached_answer_id_fkey',
            ondelete='SET NULL',
        ),
        sa.ForeignKeyConstraint(
            ['exercise_id'],
            ['exercises.exercise_id'],
            name='exercise_attempts_exercise_id_fkey',
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('attempt_id', name='exercise_attempts_pkey'),
    )
    op.create_index(
        'ix_exercise_attempts_attempt_id',
        'exercise_attempts',
        ['attempt_id'],
        unique=False,
    )
    # ### end Alembic commands ###
